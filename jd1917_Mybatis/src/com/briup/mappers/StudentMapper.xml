<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- com.briup.mappers.StudentMapper是我们定义接口的全限定名字 这样就可以使用接口调用映射的SQL语句了 这个名字一定要和接口对应上 -->
<mapper namespace="com.briup.mappers.StudentMapper">

	<!-- 定义一种映射关系 -->
	<resultMap type="Student" id="StudentResult">
		<id property="id" column="stud_id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="dob" column="dob" />
		<result property="phone" column="phone" />
	</resultMap>
	<!-- id是给select元素取一个名字 id值唯一 resultMap 指定是一种自定义的映射关系 -->
	<select id="findAllStudents" resultMap="StudentResult">
		SELECT * FROM STUDENTS
	</select>

	<!-- 列名和属性名字不一致可以给查询的列起一个别名 -->
	<!-- 按照默认的映射关系来封装对象 -->
	<select id="findStudentById" parameterType="int"
		resultType="Student">
		SELECT STUD_ID AS ID,NAME,EMAIL,DOB
		FROM STUDENTS
		WHERE
		STUD_ID=#{id}
	</select>

	<insert id="insertStudent" parameterType="Student">
		INSERT INTO
		STUDENTS(STUD_ID,NAME,EMAIL,DOB)
		VALUES(#{id},#{name},#{email},#{dob})
	</insert>

	<!-- 添加包含学生号码的学生 -->
	<insert id="insertStudentAndPhone" parameterType="Student">
		<selectKey resultType="int" keyProperty="id" order="BEFORE">
			SELECT my_seq.nextval FROM DUAL
		</selectKey>
		INSERT INTO
		STUDENTS(STUD_ID,NAME,EMAIL,DOB,PHONE)
		VALUES(#{id},#{name},#{email},#{dob},#{phone})
	</insert>

	<!-- 根据ID删除学生 -->
	<delete id="deleteStudentById" parameterType="int">
		delete from students
		where stud_id=#{id}
	</delete>
	<!-- 根据id号更新某一个学生的信息 -->
	<update id="updateStudentById" parameterType="Student">
		update students
		set name=#{name},email=#{email}
		where stud_id=#{id}
	</update>
	<!-- 删除所有学生的信息 -->
	<delete id="deleteAllStudents">
		delete from students
	</delete>
</mapper>