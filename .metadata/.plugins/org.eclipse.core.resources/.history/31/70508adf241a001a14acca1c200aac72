package n1_100;

/*给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。
你可以假设数组中无重复元素。*/
public class N35 {
	public int searchInsert(int[] nums, int target) {
		int result = 0;
		int right = nums.length-1;
		int left = 0;
		if((result=findTarget(nums, left, right, target))!=-1) {
			return result;
		}else {
			//12356
			return right-1;
		}
	}
	public int findTarget(int[] nums, int left, int right, int target) {
		while (left <= right) {
			int mid = (left + right) / 2;
			if (nums[mid] == target) {
				return mid;
			} else if (nums[mid] > target) {
				right = mid - 1;
			} else {
				left = mid + 1;
			}
		}
		return -1;
	}
	public static void main(String[] args) {
		int[] nums = {1,3,5,6};
		int target = 2;
		System.out.println(new N35().findTarget(nums, left, right, target));
	}
}
